# Instantiate the stack detached from log output
docker-compose up -d

# Output the container logs and follow
docker-compose logs -f

# Output the container logs and follow for a specific container
docker-compose logs -f streamsets

# Terminate the stack
docker-compose down

# Check the stack status
docker-compose ps

# Pause and unpause the stack
docker-compose pause
docker-compose unpause

# Restart the stack
docker-compose restart

# Run if you have done changes to a running container and you want to save them to an image
docker commit -t hvbnext/streamsets:mychanges <container id>

# Save image to registry if you have write permission to the repository (here Docker Hub hvbnext account)
docker push hvbnext/streamsets:mychanges

# Remove existing container and images
docker image rm --force hvbnext/infometis-local:v1
docker image rm --force hvbnext/zookeeper:base
docker image rm --force hvbnext/kafka:base
docker image rm --force hvbnext/kafka-manager:base
docker image rm --force hvbnext/filebeat:docker
docker image rm --force hvbnext/metricbeat:local
docker image rm --force hvbnext/streamsets:local
docker image rm --force hvbnext/streamsets:dev
docker image rm --force hvbnext/elasticsearch:base
docker image rm --force hvbnext/kibana:local
docker image rm --force hvbnext/grafana:local

##################### CONFIGURATION #####################################

docker-compose -f docker-compose-config.yml up -d

#####

# import pipelines in streamsets and streamsets-local
# import saved objects in kibana
# register kafka in kafka-manager

#####

docker commit elasticsearch hvbnext/elasticsearch:local-cc
docker commit kafka-manager hvbnext/kafka-manager:local-cc
docker commit streamsets hvbnext/streamsets:dev-cc
docker commit streamsets-local hvbnext/streamsets:local-cc

docker-compose -f docker-compose-config.yml down

#####

docker-compose up -d

#####

docker push hvbnext/kafka-manager:local-cc
docker push hvbnext/elasticsearch:local-cc
docker push hvbnext/streamsets:dev-cc
docker push hvbnext/streamsets:local-cc

##################### CONFIGURATION #####################################
